apiVersion: apps/v1
kind: Deployment
metadata:
  name: a-pod-for-retail-therapy
spec: # specs for deployment resource
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: php
  template: # blueprint for pods
    metadata:
      labels:
        app: php
    spec: # specs for web server pod
      containers:
      - name: apache
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 80
        env: 
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.passwordSecretName }}
              key: {{ .Values.db.passwordSecretKey }}
        - name: DB_HOST
          value: "{{ .Values.db.host }}"
        - name: DB_NAME
          value: "{{ .Values.db.name }}"
        - name: DB_USER
          value: "{{ .Values.db.user }}"
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.rootPasswordSecretName }}
              key: {{ .Values.db.rootPasswordSecretKey }}

        # Step 6. Adding a dark mode toggle 
        - name: FEATURE_DARK_MODE
          valueFrom:
            configMapKeyRef:
              name: status-config
              key: FEATURE_DARK_MODE

        # Step 11 Add probes
        livenessProbe:
          httpGet:
            path: /probes/status.php
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 30

        readinessProbe:
          httpGet:
            path: /probes/status.php
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5        
        
        volumeMounts:
        - name: probes-volume
          mountPath: /var/www/html/probes

        # Step 2. Deploy web server with database connection
        command: ["/bin/bash", "-c"] 
        args:
        - |
            echo "Waiting for MariaDB to be ready..."
            until mariadb -h "$DB_HOST" -u root -p"$MYSQL_ROOT_PASSWORD" -e "SELECT 1"; do
                echo "MariaDB is unavailable - retrying in 5 seconds"
                sleep 5
            done
            
            echo "Running sql script..."
            mariadb -h "$DB_HOST" -u root -p"$MYSQL_ROOT_PASSWORD" -e "\
            CREATE DATABASE IF NOT EXISTS $DB_NAME; \
            CREATE USER IF NOT EXISTS '$DB_USER'@'%' IDENTIFIED BY '$DB_PASSWORD'; \
            USE $DB_NAME; \
            GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'%'; \
            FLUSH PRIVILEGES;"

            echo "Checking if table exists" 
            if mariadb -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASSWORD" -e "\
                USE \`$DB_NAME\`; SELECT 1 FROM products LIMIT 1;" | grep -q "1"; then
                echo "Table already exists. Skipping creation and insertion."
            else
                mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASSWORD" -e "\
                USE \`$DB_NAME\`; \
                CREATE TABLE products (\
                    id mediumint(8) unsigned NOT NULL auto_increment, \
                    Name varchar(255) default NULL, \
                    Price varchar(255) default NULL, \
                    ImageUrl varchar(255) default NULL, \
                    PRIMARY KEY (id)\
                ); \
                INSERT INTO products (Name, Price, ImageUrl) VALUES \
                ('Laptop','100','c-1.png'), \
                ('Drone','200','c-2.png'), \
                ('VR','300','c-3.png'), \
                ('Tablet','50','c-5.png'), \
                ('Watch','90','c-6.png'), \
                ('Phone Covers','20','c-7.png'), \
                ('Phone','80','c-8.png'), \
                ('Laptop','150','c-4.png');"
            fi
            apache2ctl -D FOREGROUND

      # Step 11. Add volume for probes configmap
      volumes:          
      - name: probes-volume
        configMap:
          name: status-config